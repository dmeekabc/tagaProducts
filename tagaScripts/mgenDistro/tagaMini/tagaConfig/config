#######################################################################
#
# Copyright (c) IBOA Corp 2016
#
# All Rights Reserved
#                                                                     
# Redistribution and use in source and binary forms, with or without  
# modification, are permitted provided that the following conditions 
# are met:                                                             
# 1. Redistributions of source code must retain the above copyright    
#    notice, this list of conditions and the following disclaimer.     
# 2. Redistributions in binary form must reproduce the above           
#    copyright notice, this list of conditions and the following       
#    disclaimer in the documentation and/or other materials provided   
#    with the distribution.                                            
#                                                                      
# THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS   
# OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED    
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE   
# ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHORS OR CONTRIBUTORS BE     
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR  
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT    
# OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR   
# BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF           
# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT            
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE    
# USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH     
# DAMAGE.                                                              
#
#######################################################################

####################################################
# The root of the config
####################################################
TAGA_DIR=/tmp/tagaMini # new sept 2016, /tmp/tagaMini version supported
TAGA_CONFIG_DIR=$TAGA_DIR/tagaConfig 
TAGA_RUN_DIR=$TAGA_DIR/tagaRUN


let TAGA_TURBO_MODE=0
let TAGA_TURBO_MODE=1

let EARLY_COLLECT=1 # testing
let EARLY_COLLECT=0 # normal

let USE_ALT_MONITOR_LIST=1 # testing
let USE_ALT_MONITOR_LIST=0 # normal

let SIM_COUNTS_DISABLED=1 # testing
let SIM_COUNTS_DISABLED=0 # normal

let SENT_COUNTS_DISABLED=1 # testing
let SENT_COUNTS_DISABLED=0 # normal

let COUNTS_DISABLED=1 # testing
let COUNTS_DISABLED=0 # normal

let PARALLEL_STOP=0 # normal
let PARALLEL_STOP=1 # testing

let PARALLEL_CLEAN=0 # normal
let PARALLEL_CLEAN=1 # testing

TAGA_ADMIN_STATS_REMOTE=0
TAGA_ADMIN_STATS_REMOTE=1

# dlm temp new jul 2016
INTERFACE_SPECIFIED_SOURCE=1
INTERFACE_SPECIFIED_SOURCE=0

FILTER_OUT_GATEWAY_DUP_COUNTS=1
FILTER_OUT_GATEWAY_DUP_COUNTS=0

let REGEN_HOSTS_TO_IP_MAP_FILE=0 # test, use with caution
let REGEN_HOSTS_TO_IP_MAP_FILE=1 # normal

let REGEN_SHRARED_IP_FILE=0 # do this after custom edits to shared IP file
let REGEN_SHRARED_IP_FILE=1 # normal, do this at least once to start

TIME_SYNCH_CHECK_TRY_COUNT_THRESH=10
TIME_SYNCH_CHECK_TRY_COUNT_THRESH=3
TIME_SYNCH_CHECK_TRY_COUNT_THRESH=1 # do not use
TIME_SYNCH_CHECK_TRY_COUNT_THRESH=2 # minimum to choose


####################################################
# Enable or Disable all testing per iteration loop
# and other Main Test Iteration Configs
####################################################
ALL_TESTS_DISABLED=1 # disable all tests (Testing)
ALL_TESTS_DISABLED=0 # enable all tests (Normal)

####################################################
# NEW Var SECTION, Implement then move somewhere else
####################################################
#TBD
let IP_PAD_LEN=16
let NAME_PAD_LEN=24
let CMD_PAD_LEN=16

# num of secs per target for each managed command
let MANAGED_WAIT_FACTOR=5


####################################################
# Test type - Multicast or Unicast, UDP or TCP
####################################################
TESTTYPE="UCAST_TCP" # TCP UCAST
TESTTYPE="MCAST"     # UDP MCAST
TESTTYPE="UCAST_UDP" # UDP UCAST

####################################################
# Begin of TAGA DISPLAY Config
####################################################

####################################################
# TAGA DISPLAY (Standard out) Enumerated Values
####################################################
# Note: Do not use these directly in code
# Note: In code, use these in comparisons only to value below
####################################################
# TAGA DISPLAY (Standard out) Enumerated Values
####################################################
let TAGA_DISPLAY_ENUM_VAL_0_NONE=0     # Do Not Change Order (No Effect)
let TAGA_DISPLAY_ENUM_VAL_1_SILENT=1   # Do Not Change Order (No Effect)
let TAGA_DISPLAY_ENUM_VAL_2_BRIEF=2    # Do Not Change Order (No Effect)
let TAGA_DISPLAY_ENUM_VAL_3_NORMAL=3   # Do Not Change Order (No Effect)
let TAGA_DISPLAY_ENUM_VAL_4_VERBOSE=4  # Do Not Change Order (No Effect)
####################################################
# TAGA DISPLAY (Standard out) Enumerated Values
####################################################
# Note: Do not use these directly in code
# Note: In code, use these in comparisons only to value below
####################################################
# TAGA DISPLAY (Standard out) Enumerated Values
####################################################

####################################################
#
# Note: For MAX OUTPUT, the following three configurations 
# are required:
#
#   1. TAGA DISPLAY SETTING VALUE == VERBOSE ENUM VALUE
#   2. TAGA DEBUG DISPLAY BOOLEAN == 1
#   3. TAGA EXPERT DISPLAY BOOLEAN == 1
#
####################################################

####################################################
# TAGA DISPLAY (Standard out) Setting (bottom setting wins)
####################################################
let TAGA_DISPLAY_SETTING=$TAGA_DISPLAY_ENUM_VAL_0_NONE
let TAGA_DISPLAY_SETTING=$TAGA_DISPLAY_ENUM_VAL_3_NORMAL
let TAGA_DISPLAY_SETTING=$TAGA_DISPLAY_ENUM_VAL_1_SILENT
let TAGA_DISPLAY_SETTING=$TAGA_DISPLAY_ENUM_VAL_4_VERBOSE
let TAGA_DISPLAY_SETTING=$TAGA_DISPLAY_ENUM_VAL_2_BRIEF


####################################################
# TAGA DISPLAY Booleans
####################################################
# TAGA DISPLAY Debug (Standard out) Boolean
let TAGA_DISPLAY_DEBUG=1
let TAGA_DISPLAY_DEBUG=0

# TAGA DISPLAY Expert (Standard out) Boolean (standard out boolean)
# note: expert display always available in TAGA *.dat files
let TAGA_DISPLAY_EXPERT=1
let TAGA_DISPLAY_EXPERT=0

####################################################
# End of TAGA DISPLAY Config
####################################################

# dlm temp: the plan is to replace string usage 
#           below with enum/boolean usage above
# TAGA DISPLAY setting
#TAGA_DISPLAY="SILENT"   # least verbose
#TAGA_DISPLAY="BRIEF"    # even less verbose
#TAGA_DISPLAY="NORMAL"   # less verbose
#TAGA_DISPLAY="VERBOSE"  # verbose
#TAGA_DISPLAY="DEBUG"    # debug

####################################################
# MAX ITERATIONS
####################################################

MAX_ITERATIONS=1       # max iterations (Testing)
MAX_ITERATIONS=8       # max iterations (Testing)
MAX_ITERATIONS=1000000 # max iterations (Normal)
MAX_ITERATIONS=4       # max iterations (Testing)
MAX_ITERATIONS=3       # max iterations (Testing)
MAX_ITERATIONS=2       # max iterations (Testing)
MAX_ITERATIONS=6       # max iterations (Testing)
MAX_ITERATIONS=20       # max iterations (Testing)
MAX_ITERATIONS=60       # max iterations (Testing)
MAX_ITERATIONS=100       # max iterations (Testing)
MAX_ITERATIONS=200       # max iterations (Testing)
MAX_ITERATIONS=500       # max iterations (Testing)
MAX_ITERATIONS=2500       # max iterations (Testing)
STEPWISE_ITERATIONS=2  # Testing
STEPWISE_ITERATIONS=1  # Testing
STEPWISE_ITERATIONS=0  # Normal

####################################################
# MAX DURATION BEFORE REBOOT
####################################################
MAX_ITER_DUR_BEFORE_REBOOT=180
MAX_ITER_DUR_BEFORE_REBOOT=200
MAX_ITER_DUR_BEFORE_REBOOT=240
MAX_ITER_DUR_BEFORE_REBOOT=300
MAX_ITER_DUR_BEFORE_REBOOT=600
MAX_ITER_DUR_BEFORE_REBOOT=10000000 # disable

# set this very large to eliminate (perceivably) spurious reboots
MAX_TIME_DELTA_BEFORE_REBOOT=20

####################################################
# TRAFFIC CONFIG
####################################################
# MGEN Traffic Configs
# Message Count
MSGCOUNT=10
MSGCOUNT=22
MSGCOUNT=200
MSGCOUNT=1000
MSGCOUNT=10
MSGCOUNT=100
MSGCOUNT=10000
MSGCOUNT=500
MSGCOUNT=1000
MSGCOUNT=20
MSGCOUNT=100
MSGCOUNT=1000
MSGCOUNT=5000
MSGCOUNT=100
MSGCOUNT=150
MSGCOUNT=4
MSGCOUNT=500
MSGCOUNT=20
MSGCOUNT=100
MSGCOUNT=20
MSGCOUNT=100
MSGCOUNT=5
MSGCOUNT=5000
MSGCOUNT=100
MSGCOUNT=1000
MSGCOUNT=200
MSGCOUNT=100
MSGCOUNT=5000
MSGCOUNT=100
MSGCOUNT=200
MSGCOUNT=50
MSGCOUNT=20
MSGCOUNT=200
MSGCOUNT=100
MSGCOUNT=10
MSGCOUNT=20
MSGCOUNT=100
MSGCOUNT=50
MSGCOUNT=10

# Message Rate
# Note that fractional rates are not supported by the TAGA utility
# Note that while fractional rates are supported by MGEN, those 
# fractional rates are not supported by the TAGA utility
#MSGRATE=0.2 # 5 for five per second, 0.2 for each 5 seconds
#MSGRATE=0.1 # 5 for five per second, 0.1 for each 10 seconds

MSGRATE=5   # 5 for five per second, 0.2 for each 5 seconds
MSGRATE=200 # 5 for five per second, 0.2 for each 5 seconds
MSGRATE=2000 # 5 for five per second, 0.2 for each 5 seconds
MSGRATE=20 # 5 for five per second, 0.2 for each 5 seconds
MSGRATE=50 # 5 for five per second, 0.2 for each 5 seconds
MSGRATE=2 # 5 for five per second, 0.2 for each 5 seconds
MSGRATE=50 # 5 for five per second, 0.2 for each 5 seconds
MSGRATE=2   # 5 for five per second, 0.2 for each 5 seconds
MSGRATE=10 # 5 for five per second, 0.2 for each 5 seconds
MSGRATE=20 # 5 for five per second, 0.2 for each 5 seconds
MSGRATE=50 # 5 for five per second, 0.2 for each 5 seconds
MSGRATE=1   # 5 for five per second, 0.2 for each 5 seconds
MSGRATE=20 # 5 for five per second, 0.2 for each 5 seconds
MSGRATE=2 # 5 for five per second, 0.2 for each 5 seconds
MSGRATE=5   # 5 for five per second, 0.2 for each 5 seconds
MSGRATE=20 # 5 for five per second, 0.2 for each 5 seconds
MSGRATE=10 # 5 for five per second, 0.2 for each 5 seconds
MSGRATE=10 # 5 for five per second, 0.2 for each 5 seconds
MSGRATE=5   # 5 for five per second, 0.2 for each 5 seconds
MSGRATE=1   # 5 for five per second, 0.2 for each 5 seconds
MSGRATE=5   # 5 for five per second, 0.2 for each 5 seconds
MSGRATE=2 # 5 for five per second, 0.2 for each 5 seconds
MSGRATE=3 # 5 for five per second, 0.2 for each 5 seconds
MSGRATE=10 # 5 for five per second, 0.2 for each 5 seconds
MSGRATE=5   # 5 for five per second, 0.2 for each 5 seconds
MSGRATE=4   # 5 for five per second, 0.2 for each 5 seconds
MSGRATE=2 # 5 for five per second, 0.2 for each 5 seconds
MSGRATE=1 # 5 for five per second, 0.2 for each 5 seconds
MSGRATE=5   # 5 for five per second, 0.2 for each 5 seconds
MSGRATE=2 # 5 for five per second, 0.2 for each 5 seconds
MSGRATE=20 # 5 for five per second, 0.2 for each 5 seconds

# try to disable traffic (MSGCOUNT == 0 does not work!)
#MSGRATE=0.0 #MSGCOUNT=0


# NOTE: 
# NOTE: 1024 is max for TCP for TAGA counting
# NOTE: 
# Message Length
MSGLEN=1200
MSGLEN=120
MSGLEN=94
MSGLEN=940
MSGLEN=1040
MSGLEN=1024 # note, 1024 is max for TCP for TAGA counting
MSGLEN=120

####################################################
# The Keep Alive Function
####################################################

let TAGA_KEEP_ALIVE=1 # testing, see test notes in keepAlive.sh
let TAGA_KEEP_ALIVE=0 # normal

# lock step is slow but sure, at least that is the plan
let TAGA_LOCK_STEP=0 # normal
let TAGA_LOCK_STEP=1 # testing

##############################
# Fixed List Configuration
##############################

FIXED_ONE_LIST=192.168.43.124   # wireshark, other
FIXED_ONE_LIST=192.168.43.188   # wireshark, other
FIXED_ONE_LIST=192.168.43.208   # wireshark, other
FIXED_ONE_LIST=192.168.43.157   # wireshark, other
FIXED_ONE_LIST=192.168.43.69    # wireshark, other

FIXED_ONE_LIST=10.0.0.20
FIXED_ONE_LIST=10.0.0.21
FIXED_ONE_LIST=10.0.0.22
FIXED_ONE_LIST=10.0.0.27
FIXED_ONE_LIST=10.0.0.18

FIXED_ONE_LIST_ITFC=wlp3s0    # 43.124 , 10.27 wireshark, oher
FIXED_ONE_LIST_ITFC=wlp2s0    # 43.208, 10.20 wireshark, oher
FIXED_ONE_LIST_ITFC=wlo1      # 43.157, 10.21 wireshark, oher
FIXED_ONE_LIST_ITFC=wlo1      # 43.69, 10.22 wireshark, oher
FIXED_ONE_LIST_ITFC=wlan0     # 43.188, 10.18 wireshark, oher

FIXED_ALT_LIST="192.168.43.69 192.168.43.124 192.168.43.157 192.168.43.188 192.168.43.208"

# DAEMON ids
DAEMON1_IP=192.168.43.69
DAEMON2_IP=192.168.43.124

##############################
# Variable Other List Configuration
# Should the $OTHERS var hold single or multiple targets?
##############################
OTHERS="single"
OTHERS="multiple"

####################################################
# Time Synch Strict Flag
####################################################
# verify time synch?
TIME_SYNCH_CHECK_ENABLED=1 # (Normal)
TIME_SYNCH_CHECK_ENABLED=0 # (Testing)

# strict time synch?
STRICT_TIME_SYNCH=1 # (Normal)
STRICT_TIME_SYNCH=0 # (Testing)

CONFIRM_REQD=1  # strict
CONFIRM_REQD=0  # not strict

# resource monitor (top, netstat, etc) enabled?
RESOURCE_MON_ENABLED=1 # (Testing)
RESOURCE_MON_ENABLED=0 # (Testing)
let RESOURCE_DISPLAY_MODULUS=5
let RESOURCE_DISPLAY_MODULUS=1000000
let RESOURCE_DISPLAY_MODULUS=1
let RESOURCE_DISPLAY_MODULUS=10

# probe the targets?
PROBE_ENABLED=1 # (Testing)
PROBE_ENABLED=0 # (Normal)

# get ping times?
PING_TIME_CHECK_ENABLED=1 # (Testing)
PING_TIME_CHECK_ENABLED=0 # (Normal)

##############################################
# ENVIRON SIMULATION SWITCHES
##############################################
MAX_ENVIRON_SIM_LOOPS=1 # simulated environ loop count (Testing)
MAX_ENVIRON_SIM_LOOPS=0 # simulated environ loop count (Normal)
ENVIRON_SIMULATION=1 # simulated environ on/off flag (Normal)/(Testing)
ENVIRON_SIMULATION=0 # simulated environ on/off flag (Normal)

##############################################
# Simulation Server Config Follows
##############################################

# Primary Sim Servers 
PRIMARY_SIM_SERVER_ON=1 # (Old Normal)
PRIMARY_SIM_SERVER_ON=0 # (Normal) # this is now a daemon

START_SIMULATION=1 # Start Specialized Simulation Servers (Testing)
START_SIMULATION=0 # Do Not Start Specialized Simulation Servers (Normal)

STOP_SIMULATION=0 # Do Not Stop Primary and Specialized Simulation Servers (Testing)
STOP_SIMULATION=1 # Stop Primary and Specialized Simulation Servers (Normal)

##############################################
# Traffic SWITCHes
##############################################
SIMULATION_ONLY=1 # simulation only flag (1 disables traffic) (Testing)
SIMULATION_ONLY=0 # simulation only flag (0 enables traffic) (Normal)

# Max output (enable this output if using the simulations below)
MAX_OUTPUT_ENABLED=1 # (Testing)
MAX_OUTPUT_ENABLED=0 # (Normal)

# XXX Stimulation
XXX_ON=1 # (Testing)
XXX_ON=0 # (Normal)

# XXXX DEVICE simulators on/off flags
DEVICE1=1 
DEVICE2=1 
DEVICE3=1
DEVICE4=0 
DEVICE5=0

##############################################
# End of Server Config 
##############################################

##############################################
# Begin of Client Config 
##############################################

##############################################
# Start of Cycle Testing (test client testing)
##############################################
START_OF_CYCLE_TESTS_ENABLED=1 # Testing
START_OF_CYCLE_TESTS_ENABLED=0 # Normal

##############################################
# Mid Cycle Testing (test client testing)
##############################################
MID_CYCLE_TESTS_ENABLED=1 # Testing
MID_CYCLE_TESTS_ENABLED=0 # Normal

##############################################
# End of Cycle Testing (test client testing)
##############################################

END_OF_CYCLE_TESTS1_ENABLED=1 # Testing
END_OF_CYCLE_TESTS1_ENABLED=0 # Normal

END_OF_CYCLE_TESTS2_ENABLED=1 # Testing
END_OF_CYCLE_TESTS2_ENABLED=0 # Normal

END_OF_CYCLE_TESTS3_ENABLED=1 # Testing
END_OF_CYCLE_TESTS3_ENABLED=0 # Normal

VAR_TEST_ENABLED=1 # Testing
VAR_TEST_ENABLED=0 # Normal

##############################################
# additional admin/cleanup
##############################################
EXTRA_FILE_CLEANUP_ENABLED=1 # Testing 
EXTRA_FILE_CLEANUP_ENABLED=0 # Normal

##############################################
# Do this up top and in this order to avoid dependency loop
##############################################
# Note: 'config' is not always called from TAGA_DIR so this check is required
if [ $TAGA_CONFIG_DIR ] ; then
  echo $TAGA_DIR is already defined >/dev/null
else
  TAGA_CONFIG_DIR=`pwd`
fi 
targetList=`$TAGA_CONFIG_DIR/targetList.sh`
source $TAGA_CONFIG_DIR/targetList.sh   > /dev/null # for NETADDRPART

##############################################
# manually generated configs
##############################################

SERVER_INIT_DELAY=20
SERVER_INIT_DELAY=4
SERVER_INIT_DELAY=10
SERVER_INIT_DELAY=15
SERVER_INIT_DELAY=20
SERVER_INIT_DELAY=10
SERVER_INIT_DELAY=5
SERVER_INIT_DELAY=10
SERVER_INIT_DELAY=20
let MGEN_SERVER_INIT_DELAY=$SERVER_INIT_DELAY+5
let MGEN_SERVER_INIT_DELAY=$SERVER_INIT_DELAY+2
let MGEN_SERVER_INIT_DELAY=$SERVER_INIT_DELAY+10
let MGEN_SERVER_INIT_DELAY=$SERVER_INIT_DELAY+5
let MGEN_SERVER_INIT_DELAY=$SERVER_INIT_DELAY+10


# end of iteration delay 
END_OF_ITER_DELAY=60 #0
END_OF_ITER_DELAY_PRINT_MODULUS=10 #0
END_OF_ITER_DELAY=1 #0
END_OF_ITER_DELAY_PRINT_MODULUS=1 #0

####################################################
# Archive or No Archive
####################################################
#
# Set TESTONLY to 1 to force output directory to be stable (disable archiving)
# hint: e.g. useful for countSends.sh and countReceives.sh script testing
# 
TESTONLY=0 # archiving enabled
TESTONLY=1 # archiving disabled

# MCAST config
MYMCAST_ADDR="225.0.0.25" # does not work
MYMCAST_ADDR="224.1.2.4"  # does not work
MYMCAST_ADDR="225.1.2.4"  # does not work
MYMCAST_ADDR="226.1.2.3"  # does not work
MYMCAST_ADDR="227.1.2.3"  # does not work
MYMCAST_ADDR="225.1.2.3" # works
MYMCAST_ADDR="224.1.2.3" # works
MYMCAST_ADDR="225.1.2.3" # works
MYMCAST_ADDR="224.1.2.3" # works
MYMCAST_PORT=8888


########################################################
## MCAST Traffic and Group Join CONFIG
########################################################

# NOTE: Use Set1 or Set2 below, bottom set wins

# Set1: Selective MCAST Traffic
MCAST_SENDER_FILTER_LIST="192.168.44.233 192.168.44.223 "
MCAST_NON_RECEIVER_FILTER_LIST=$MCAST_SENDER_FILTER_LIST

# Set2: Max MCAST Traffic
MCAST_SENDER_FILTER_LIST=$targetList # everyone in sender list
MCAST_NON_RECEIVER_FILTER_LIST=""    # nobody in non-recive list

########################################################

# Ports
SOURCEPORT=8880
PORTBASE=7770

# Narrow display is 10 nodes, wide display is 20 nodes
# Note: For Middle display set wide==0 and narrow==0
WIDE_DISPLAY=1
WIDE_DISPLAY=0
NARROW_DISPLAY=0
NARROW_DISPLAY=1

#NORMAL_DISPLAY=0
#NORMAL_DISPLAY=1

# future
#DISPLAY_TYPE=WIDE
#DISPLAY_TYPE=NORMAL
#DISPLAY_TYPE=NARROW

# Continuous Synch Flag
CONTINUOUS_SYNCH=1  # synch everything
CONTINUOUS_SYNCH=0  # synch config only

# Disabled Synch Flag
CONFIG_SYNCH_DISABLED=1  #  abnormal, disable synch in special circumstances
CONFIG_SYNCH_DISABLED=0  #  normal, synch normally


##############################################
# manually and/or automatatically generated configs
##############################################


##############################################
# extend configs in the confiig_extensions file
# NOTE: This file is machine/system specific and is not synched
# NOTE: Do this here so MYIP and INTERFACE auto config below 
#       can reference and make use of these extensions
# NOTE: This config_extensions has been used to change NETADDRPART 
#       to use the 2nd interface rather than 1st interface
# NOTE: This config_extensions has been used to change NETADDRPART 
#       to use the 2nd interface rather than 1st interface
# NOTE: Consider if config_overrides is better suited for that purpose
# NOTE: Consider if config_overrides is better suited for that purpose
##############################################
if [ -s $TAGA_CONFIG_DIR/config_extensions ] ; then
  #echo NOTICE: config is being extended by config_extensions file
  source $TAGA_CONFIG_DIR/config_extensions
fi


##############################################
# automatatically generated configs
##############################################
TAGA_DIR=~/scripts/taga # new mar 2016, relocateable
OUTPUT_DIR=$TAGA_RUN_DIR/output # new mar 2016
LOG_DIR=/tmp/taga/log # new mar 2016
DATA_DIR=/tmp/taga/data # new mar 2016

MY_NODE=`/sbin/ifconfig | grep $NETADDRPART | cut -d: -f 2 | cut -d. -f 3`

# DLM TEMP
# Clearly, the below should be replaced with a loop or a list or some smarter way
# to search all of these alternates rather than the brute force method below

# DLM TEMP
# Clearly, the below should be replaced with a loop or a list or some smarter way
# to search all of these alternates rather than the brute force method below

# DLM TEMP
# Clearly, the below should be replaced with a loop or a list or some smarter way
# to search all of these alternates rather than the brute force method below

# default to localhost
MYIP=localhost
# determine MYIP from candidates list
MYIPCANDIDATES=`/sbin/ifconfig | grep $NETADDRPART |  \
     cut -d: -f 2 | cut -d" " -f 1`
INTERFACECANDIDATE=`/sbin/ifconfig | grep $NETADDRPART -B1 | head -n 1 | cut -d" " -f1`

if [ ! "$MYIPCANDIDATES"  ]; then
  MYIPCANDIDATES=`/sbin/ifconfig | grep $NETADDRPART_ALT1 |  \
     cut -d: -f 2 | cut -d" " -f 1`
  INTERFACECANDIDATE=`/sbin/ifconfig | grep $NETADDRPART_ALT1 -B1 | head -n 1 | cut -d" " -f1`
fi
if [ ! "$MYIPCANDIDATES"  ]; then
  MYIPCANDIDATES=`/sbin/ifconfig | grep $NETADDRPART_ALT2 |  \
     cut -d: -f 2 | cut -d" " -f 1`
  INTERFACECANDIDATE=`/sbin/ifconfig | grep $NETADDRPART_ALT2 -B1 | head -n 1 | cut -d" " -f1`
fi
if [ ! "$MYIPCANDIDATES"  ]; then
  MYIPCANDIDATES=`/sbin/ifconfig | grep $NETADDRPART_ALT3 |  \
     cut -d: -f 2 | cut -d" " -f 1`
  INTERFACECANDIDATE=`/sbin/ifconfig | grep $NETADDRPART_ALT3 -B1 | head -n 1 | cut -d" " -f1`
fi
if [ ! "$MYIPCANDIDATES"  ]; then
  MYIPCANDIDATES=`/sbin/ifconfig | grep $NETADDRPART_ALT4 |  \
     cut -d: -f 2 | cut -d" " -f 1`
  INTERFACECANDIDATE=`/sbin/ifconfig | grep $NETADDRPART_ALT4 -B1 | head -n 1 | cut -d" " -f1`
fi
if [ ! "$MYIPCANDIDATES"  ]; then
  MYIPCANDIDATES=`/sbin/ifconfig | grep $NETADDRPART_ALT5 |  \
     cut -d: -f 2 | cut -d" " -f 1`
  INTERFACECANDIDATE=`/sbin/ifconfig | grep $NETADDRPART_ALT5 -B1 | head -n 1 | cut -d" " -f1`
fi
if [ ! "$MYIPCANDIDATES"  ]; then
  MYIPCANDIDATES=`/sbin/ifconfig | grep $NETADDRPART_ALT6 |  \
     cut -d: -f 2 | cut -d" " -f 1`
  INTERFACECANDIDATE=`/sbin/ifconfig | grep $NETADDRPART_ALT6 -B1 | head -n 1 | cut -d" " -f1`
fi
if [ ! "$MYIPCANDIDATES"  ]; then
  MYIPCANDIDATES=`/sbin/ifconfig | grep $NETADDRPART_ALT7 |  \
     cut -d: -f 2 | cut -d" " -f 1`
  INTERFACECANDIDATE=`/sbin/ifconfig | grep $NETADDRPART_ALT7 -B1 | head -n 1 | cut -d" " -f1`
fi
if [ ! "$MYIPCANDIDATES"  ]; then
  MYIPCANDIDATES=`/sbin/ifconfig | grep $NETADDRPART_ALT8 |  \
     cut -d: -f 2 | cut -d" " -f 1`
  INTERFACECANDIDATE=`/sbin/ifconfig | grep $NETADDRPART_ALT8 -B1 | head -n 1 | cut -d" " -f1`
fi
if [ ! "$MYIPCANDIDATES"  ]; then
  MYIPCANDIDATES=`/sbin/ifconfig | grep $NETADDRPART_ALT9 |  \
     cut -d: -f 2 | cut -d" " -f 1`
  INTERFACECANDIDATE=`/sbin/ifconfig | grep $NETADDRPART_ALT9 -B1 | head -n 1 | cut -d" " -f1`
fi
if [ ! "$MYIPCANDIDATES"  ]; then
  MYIPCANDIDATES=`/sbin/ifconfig | grep $NETADDRPART_ALT10 |  \
     cut -d: -f 2 | cut -d" " -f 1`
  INTERFACECANDIDATE=`/sbin/ifconfig | grep $NETADDRPART_ALT10 -B1 | head -n 1 | cut -d" " -f1`
fi
if [ ! "$MYIPCANDIDATES"  ]; then
  MYIPCANDIDATES=`/sbin/ifconfig | grep $NETADDRPART_ALT11 |  \
     cut -d: -f 2 | cut -d" " -f 1`
  INTERFACECANDIDATE=`/sbin/ifconfig | grep $NETADDRPART_ALT11 -B1 | head -n 1 | cut -d" " -f1`
fi
if [ ! "$MYIPCANDIDATES"  ]; then
  MYIPCANDIDATES=`/sbin/ifconfig | grep $NETADDRPART_ALT12 |  \
     cut -d: -f 2 | cut -d" " -f 1`
  INTERFACECANDIDATE=`/sbin/ifconfig | grep $NETADDRPART_ALT12 -B1 | head -n 1 | cut -d" " -f1`
fi
if [ ! "$MYIPCANDIDATES"  ]; then
  MYIPCANDIDATES=`/sbin/ifconfig | grep $NETADDRPART_ALT13 |  \
     cut -d: -f 2 | cut -d" " -f 1`
  INTERFACECANDIDATE=`/sbin/ifconfig | grep $NETADDRPART_ALT13 -B1 | head -n 1 | cut -d" " -f1`
fi
if [ ! "$MYIPCANDIDATES"  ]; then
  MYIPCANDIDATES=`/sbin/ifconfig | grep $NETADDRPART_ALT14 |  \
     cut -d: -f 2 | cut -d" " -f 1`
  INTERFACECANDIDATE=`/sbin/ifconfig | grep $NETADDRPART_ALT14 -B1 | head -n 1 | cut -d" " -f1`
fi
if [ ! "$MYIPCANDIDATES"  ]; then
  MYIPCANDIDATES=`/sbin/ifconfig | grep $NETADDRPART_ALT15 |  \
     cut -d: -f 2 | cut -d" " -f 1`
  INTERFACECANDIDATE=`/sbin/ifconfig | grep $NETADDRPART_ALT15 -B1 | head -n 1 | cut -d" " -f1`
fi
if [ ! "$MYIPCANDIDATES"  ]; then
  MYIPCANDIDATES=`/sbin/ifconfig | grep $NETADDRPART_ALT16 |  \
     cut -d: -f 2 | cut -d" " -f 1`
  INTERFACECANDIDATE=`/sbin/ifconfig | grep $NETADDRPART_ALT16 -B1 | head -n 1 | cut -d" " -f1`
fi
if [ ! "$MYIPCANDIDATES"  ]; then
  MYIPCANDIDATES=`/sbin/ifconfig | grep $NETADDRPART_ALT17 |  \
     cut -d: -f 2 | cut -d" " -f 1`
  INTERFACECANDIDATE=`/sbin/ifconfig | grep $NETADDRPART_ALT17 -B1 | head -n 1 | cut -d" " -f1`
fi
if [ ! "$MYIPCANDIDATES"  ]; then
  MYIPCANDIDATES=`/sbin/ifconfig | grep $NETADDRPART_ALT18 |  \
     cut -d: -f 2 | cut -d" " -f 1`
  INTERFACECANDIDATE=`/sbin/ifconfig | grep $NETADDRPART_ALT18 -B1 | head -n 1 | cut -d" " -f1`
fi
if [ ! "$MYIPCANDIDATES"  ]; then
  MYIPCANDIDATES=`/sbin/ifconfig | grep $NETADDRPART_ALT19 |  \
     cut -d: -f 2 | cut -d" " -f 1`
  INTERFACECANDIDATE=`/sbin/ifconfig | grep $NETADDRPART_ALT19 -B1 | head -n 1 | cut -d" " -f1`
fi
if [ ! "$MYIPCANDIDATES"  ]; then
  MYIPCANDIDATES=`/sbin/ifconfig | grep $NETADDRPART_ALT20 |  \
     cut -d: -f 2 | cut -d" " -f 1`
  INTERFACECANDIDATE=`/sbin/ifconfig | grep $NETADDRPART_ALT20 -B1 | head -n 1 | cut -d" " -f1`
fi

for ip in $MYIPCANDIDATES; do if echo $targetList  |  \
     grep $ip >/dev/null ; then MYIP=$ip; break;      \
     else MYIP=$ip; fi; done  # last one wins if no match
#     else MYIP=localhost; fi; done


if [ $MYIP == "localhost" ] ; then
   INTERFACE=lo
   echo WARNING: MYIP == localhost, check config NETADDRPART:$NETADDRPART, check config_extensions
   echo WARNING: MYIP == localhost, check config NETADDRPART:$NETADDRPART, check config_extensions
else
   INTERFACE=$INTERFACECANDIDATE
   MYLABEL=`cat /etc/hosts | grep $MYIP | cut -d" " -f 2`
   #echo MYLABEL:$MYLABEL
   if [ ! $MYLABEL ] ; then
      MYLABEL=$MYIP
   fi
fi

# get my target list index
let MY_TGT_LIST_INDEX=99
let INDEX_BASE=0
let p=$INDEX_BASE
for thistarget in $targetList
do
   let p=$p+1
   if [ $MYIP == $thistarget ]; then
      let MY_TGT_LIST_INDEX=$p
   fi
done

# auto configure the target count
TARGET_COUNT=`echo $targetList | wc -w`  # same as targetCount below
#targetCount=`$TAGA_CONFIG_DIR/targetList.sh | wc -w` # same as TARGET_COUNT above

# Other (One) Target Config

# OTHERS (automatic) config
if [ $OTHERS == "single" ] ; then
   # single (first) other target in other list
   if [ $TARGET_COUNT -gt 2 ]; then OTHER_LIST=`echo $targetList \
       | sed s/$MYIP//g | cut -d" " -f 1` ;                      \
       else OTHER_LIST=`echo $targetList | sed s/$MYIP//g` ; fi
else
   # multiple (all) other targets in other list
   OTHER_LIST=`echo $targetList | sed s/$MYIP//g` 
fi


##############################################
# DURATION 1 and 2 and 3
##############################################
##############################################
# DURATION 1 
##############################################
# DURATION 1 depends on msg rate and msg count and also node count if unicast
let DURATION1=$MSGCOUNT/$MSGRATE

if [ $TESTTYPE == "MCAST" ] ; then
  let DURATION1=$DURATION1+10
else
  let DURATION1=$DURATION1*$TARGET_COUNT
  let DURATION1=$DURATION1+5
fi

if [ $DURATION1 -lt $MGEN_SERVER_INIT_DELAY ]; then
   let DURATION1=$MGEN_SERVER_INIT_DELAY
fi  

# round to nearest 5
let DURATION1=$DURATION1/5
let DURATION1=$DURATION1*5
let DURATION1=$DURATION1+5


##############################################
# DURATION 2
##############################################
# DURATION 2 depends on target count
let TARGET_COUNT_FACTOR=$TARGET_COUNT-1

if [ $TESTTYPE == "MCAST" ] ; then
   let DURATION2=$TARGET_COUNT_FACTOR*1
   let DURATION2=$TARGET_COUNT_FACTOR*2
   let DURATION2=$TARGET_COUNT_FACTOR*1
else
   let DURATION2=$TARGET_COUNT_FACTOR*20
   let DURATION2=$TARGET_COUNT_FACTOR*8
   let DURATION2=$TARGET_COUNT_FACTOR*1
   let DURATION2=$TARGET_COUNT_FACTOR*10
   let DURATION2=$TARGET_COUNT_FACTOR*2
fi

# round to nearest 5
let DURATION2=$DURATION2/5
let DURATION2=$DURATION2*5
let DURATION2=$DURATION2+5

# The DURATION3 allows us to force a condition if the auto config fails
# A DURATION3 value of 0 indicates the auto config is currently sufficient
let DURATION3=0
let DURATION3=2
let DURATION3=6
let DURATION3=30
let DURATION3=60
let DURATION3=20
let DURATION3=10
let DURATION3=8
let DURATION3=6
let DURATION3=3

##############################################
# others / static constants
##############################################

##############################################
# POLICY MGT
##############################################
LOG_POLICY_VOL=10     # 10 percent by volume of /tmp
NET_POLICY_NM_RATE=10 # 10 percent thruput rate allowed for nm traffic


# Black List Handling
BLACK_LIST_THRESH=200
BLACK_LIST_THRESH=3
BLACK_LIST_THRESH=1
BLACK_LIST_THRESH=20
BLACK_LIST_THRESH=2
BLACK_LIST_THRESH=4
BLACK_LIST_THRESH=1
BLACK_LIST_THRESH=2

####################################################
# Portability Section, this section requires update 
# after port to new system
####################################################
MYLOGIN_ID=yourLoginIdGoesHere
MYLOGIN_ID=`/usr/bin/whoami` # dlm temp, changed from above 17 sept 2016
MYPASSWD=YourPasswordGoesHere
COMMAND=YourPrimaryCommandNameGoesHere
PROTO_UNDER_TEST=YourProtocolUnderTestGoesHere

####################################################
# The Kill List
####################################################
# order matters! stop generators (mgen) before monitors (tcpdump)
TAGA_KILL_LIST="keepAlive mgen survey xxx tcpdump" 
TAGA_KILL_LIST="mgen survey sim1 xxx tcpdump" 

# alternate kill list used once at run begin only ??
# alternate kill list used once at run begin only ??
TAGA_KILL_LIST_ALT="interfaceMon keepAlive mgen survey sim1 xxx tcpdump" 
TAGA_KILL_LIST_ALT="interfaceMon mgen survey sim1 xxx tcpdump" 

####################################################
VARIABLE_TEST="var_test.sh"

##############################################
# Note: TAGA provides for multiple levels of config
#  (1) primary config above 
#  (2) static admin config below
#  (2) extended config below 
#  (3) overrides below and last
##############################################

##############################################
# static admin configs in the confiig_admin file
##############################################
if [ -s $TAGA_CONFIG_DIR/config_admin ] ; then
  #echo NOTICE: config is being extended by config_admin file
  source $TAGA_CONFIG_DIR/config_admin
fi

##############################################
# extend configs in the confiig_extensions file
##############################################
if [ -s $TAGA_CONFIG_DIR/config_extensions ] ; then
  #echo NOTICE: config is being extended by config_extensions file
  source $TAGA_CONFIG_DIR/config_extensions
fi

##############################################
# override configs in the confiig_overrides file
##############################################
if [ -s $TAGA_CONFIG_DIR/config_overrides ] ; then
  #echo NOTICE: config is being overriden by config_overrides file
  source $TAGA_CONFIG_DIR/config_overrides
fi

##############################################
# Run Time Inserts ONLY Below
# Master Machine, run time insert from runLoop.sh
# Black List, run time insert from timeSynchCheck.sh
##############################################
MASTER=192.168.43.124
